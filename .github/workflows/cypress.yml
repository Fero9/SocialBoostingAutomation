name: Cypress Tests
run-name: Cypress Tests - [${{ inputs.CORRELATOR && inputs.CORRELATOR || 'N/A' }}]

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      ENVTOTEST:
        description: 'What environment to test?'
        required: true
        default: 'stage'
        options:
          - 'stage'
          - 'prod'
      CORRELATOR:
        description: 'Correlator ID (for finding this run later)'
        required: false
        
jobs:
  Cypress-Test:
    runs-on: ubuntu-latest
    #runs-on: generic
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2]
    steps:
      - name: Checkout GitCode
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install

      - name: Get current GitHub runner IP Address
        id: get-ip
        run: echo "ip_address=$(curl -s https://api64.ipify.org?format=json | jq -r '.ip')" >> $GITHUB_OUTPUT

      - name: Whitelist CF WAF for the GitHub runner
        run: |
          echo "Runner IP is ${{ steps.get-ip.outputs.ip_address }}, zone_id is ${{ vars.CF_ZONE_ID }}, filter_id is ${{ vars.CF_WAF_FILTER_ID }}"
          curl -X PUT -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.CF_API_KEY }}" \
            --data '[
              {
                "id": "${{ vars.CF_WAF_FILTER_ID }}",
                "expression": "(http.host in {\"wpstaging.socialboosting.com\" \"main-staging.socialboosting.com\" \"sb-core-staging.socialboosting.com\"} and ip.src in {${{ steps.get-ip.outputs.ip_address }}})"
              }
            ]' \
            "https://api.cloudflare.com/client/v4/zones/${{ vars.CF_ZONE_ID }}/filters"

      - name: Run Cypress Test
        uses: cypress-io/github-action@v5
        with:
          command: npx cypress run --config-file ${{ inputs.ENVTOTEST }}.config.js
          browser: electron
        env:
          SPLIT: ${{ strategy.job-total}}
          SPLIT_INDEX: ${{ strategy.job-index}}
          AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
          
